class Type(models.Model):
    name = models.CharField(max_length=256)
    type_folder = models.URLField(null = True, blank = True) #Need to ensure all items are in url format first
    mandatory_type_test_equipment = models.ManyToManyField(TestEquipment, blank=True, related_name="mandatory_type_test_equipment")
    optional_type_test_equipment = models.ManyToManyField(TestEquipment, blank=True, related_name="optional_type_test_equipment")
    type_notes = models.TextField(null=True, blank=True) #notes that will apply to all equipment of this type
    test_sheet = models.FileField(max_length=500, null=True, blank=True, upload_to = upload_type_te_path) 
    type_test_guide = models.FileField(max_length=500, null=True, blank=True, upload_to = upload_type_tg_path)
    neta_standards = models.FileField(max_length=500, null=True, blank=True, upload_to = upload_type_neta_path)
    ansi_standards = models.FileField(max_length=500, null=True, blank=True, upload_to = upload_type_ansi_path)
    ts_page_quantity = models.IntegerField(null=True, blank=True, default=1)
    quote_default = models.FloatField(null=True, blank=True)#this will override the type value
    is_private = models.BooleanField(default=False)
    is_test_sheet = models.BooleanField(default=False)
    is_insulation_resistance=models.BooleanField(default=False)
    is_lv_ic_or_mc_breaker=models.BooleanField(default=False)
    is_mv_or_hv_breaker=models.BooleanField(default=False)
    is_contact_resistance=models.BooleanField(default=False)
    is_trip_unit=models.BooleanField(default=False)
    is_primary_injection=models.BooleanField(default=False)
    is_secondary_injection=models.BooleanField(default=False)
    is_power_fused=models.BooleanField(default=False)
    is_breaker=models.BooleanField(default=False)
    is_hipot=models.BooleanField(default=False)
    is_inspection=models.BooleanField(default=False)
    is_transformer=models.BooleanField(default=False)
    is_winding_resistance=models.BooleanField(default=False)
    is_liquid_type=models.BooleanField(default=False)
    is_cable=models.BooleanField(default=False)
    is_switchgear=models.BooleanField(default=False)
    is_cable_vlf_withstand_test=models.BooleanField(default=False)
    is_ttr=models.BooleanField(default=False)
    is_xfmr_insulation_resistance=models.BooleanField(default=False)
    status = models.CharField(choices=STATUS_LIST, null=True, blank=True, max_length=16)

    is_bus_resistance=models.BooleanField(default=False)
    #new fields
    is_power_meter=models.BooleanField(default=False)
    is_mv_cable=models.BooleanField(default=False)
    is_cpt=models.BooleanField(default=False)
    is_vt=models.BooleanField(default=False)
    is_lv_switch=models.BooleanField(default=False)
    is_mv_air_switch=models.BooleanField(default=False)
    is_lv_pcb=models.BooleanField(default=False)
    is_mvc=models.BooleanField(default=False)
    is_mv_mcc=models.BooleanField(default=False)
    is_mv_air_breaker=models.BooleanField(default=False)
    is_sf6_breaker=models.BooleanField(default=False)
    is_of_xfmr=models.BooleanField(default=False)
    is_dry_mv_xfmr=models.BooleanField(default=False)
    is_vt=models.BooleanField(default=False)
    is_ct=models.BooleanField(default=False)
    is_cpt=models.BooleanField(default=False)
    is_lv_swbd=models.BooleanField(default=False)
    00000000000=models.BooleanField(default=False)
    00000000000=models.BooleanField(default=False)
    00000000000=models.BooleanField(default=False)